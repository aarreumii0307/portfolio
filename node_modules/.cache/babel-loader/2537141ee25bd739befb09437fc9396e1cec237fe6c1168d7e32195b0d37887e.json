{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC544\\uB984\\\\Desktop\\\\index\\\\portfolio\\\\kimahreum\\\\src\\\\layouts\\\\main\\\\section\\\\SectionProject.jsx\";\nimport { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionProject() {\n  var _s = $RefreshSig$();\n  const text = [\"KEEP GOING\"];\n  const textSlide = props => {\n    _s();\n    const getWidth = () => window.innerWidth;\n    ReactDOM.render( /*#__PURE__*/_jsxDEV(\"textSlide\", {\n      slides: images,\n      autoPlay: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), document.querySelector(\".main\"));\n    const [state, setState] = useState({\n      activeIndex: 0,\n      translate: 0,\n      transition: 0.45\n    });\n    const {\n      translate,\n      transition,\n      activeIndex\n    } = state;\n    const nextSlide = () => {\n      if (activeIndex === props.slides.length - 1) {\n        return setState({\n          ...state,\n          translate: 0,\n          activeIndex: 0\n        });\n      }\n      setState({\n        ...state,\n        activeIndex: activeIndex + 1,\n        translate: (activeIndex + 1) * getWidth()\n      });\n    };\n    const autoPlayRef = useRef();\n    useEffect(() => {\n      const play = () => {\n        autoPlayRef.current();\n      };\n      const interval = setInterval(play, props.autoPlay * 1000);\n      return () => clearInterval(interval);\n    }, []);\n  };\n  _s(textSlide, \"Hw/Dpse5ZtCp8uerHUkGrsfblcM=\");\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Wrap, {\n      children: /*#__PURE__*/_jsxDEV(TextBannerWrap, {\n        children: /*#__PURE__*/_jsxDEV(TextBanner, {\n          translate: translate,\n          transition: transition,\n          width: getWidth() * props.slides.length,\n          children: props.map((text, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            content: text,\n            children: \"KEEP GOING\"\n          }, index + i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = SectionProject;\nexport default SectionProject;\nconst Container = styled.div`\n  width: 100%;\n  position: relative;\n`;\n_c2 = Container;\nconst Wrap = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  overflow: hidden;\n`;\n_c3 = Wrap;\nconst TextBannerWrap = styled.ul`\n  position: relative;\n  max-width: calc(1010 * 6);\n  transition: ease 1000ms;\n  white-space: nowrap;\n`;\n_c4 = TextBannerWrap;\nconst TextBanner = styled.li`\n  width: 1010px;\n  div {\n    margin: 40px 70px;\n    font-weight: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.fonts.weightExtra;\n}};\n    font-size: 110px;\n  }\n`;\n_c5 = TextBanner;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SectionProject\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Wrap\");\n$RefreshReg$(_c4, \"TextBannerWrap\");\n$RefreshReg$(_c5, \"TextBanner\");","map":{"version":3,"names":["useState","useEffect","useRef","styled","jsxDEV","_jsxDEV","SectionProject","_s","$RefreshSig$","text","textSlide","props","getWidth","window","innerWidth","ReactDOM","render","slides","images","autoPlay","fileName","_jsxFileName","lineNumber","columnNumber","document","querySelector","state","setState","activeIndex","translate","transition","nextSlide","length","autoPlayRef","play","current","interval","setInterval","clearInterval","Container","children","Wrap","TextBannerWrap","TextBanner","width","map","i","content","index","_c","div","_c2","_c3","ul","_c4","li","_ref","theme","fonts","weightExtra","_c5","$RefreshReg$"],"sources":["C:/Users/김아름/Desktop/index/portfolio/kimahreum/src/layouts/main/section/SectionProject.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction SectionProject() {\r\n  const text = [\"KEEP GOING\"];\r\n  const textSlide = (props) => {\r\n    const getWidth = () => window.innerWidth;\r\n\r\n    ReactDOM.render(\r\n      <textSlide slides={images} autoPlay={2} />,\r\n      document.querySelector(\".main\")\r\n    );\r\n\r\n    const [state, setState] = useState({\r\n      activeIndex: 0,\r\n      translate: 0,\r\n      transition: 0.45,\r\n    });\r\n\r\n    const { translate, transition, activeIndex } = state;\r\n\r\n    const nextSlide = () => {\r\n      if (activeIndex === props.slides.length - 1) {\r\n        return setState({\r\n          ...state,\r\n          translate: 0,\r\n          activeIndex: 0,\r\n        });\r\n      }\r\n\r\n      setState({\r\n        ...state,\r\n        activeIndex: activeIndex + 1,\r\n        translate: (activeIndex + 1) * getWidth(),\r\n      });\r\n    };\r\n\r\n    const autoPlayRef = useRef();\r\n\r\n    useEffect(() => {\r\n      const play = () => {\r\n        autoPlayRef.current();\r\n      };\r\n\r\n      const interval = setInterval(play, props.autoPlay * 1000);\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <TextBannerWrap>\r\n          <TextBanner\r\n            translate={translate}\r\n            transition={transition}\r\n            width={getWidth() * props.slides.length}\r\n          >\r\n            {props.map((text, i) => (\r\n              <div key={index + i} content={text}>\r\n                KEEP GOING\r\n              </div>\r\n            ))}\r\n          </TextBanner>\r\n        </TextBannerWrap>\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SectionProject;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst TextBannerWrap = styled.ul`\r\n  position: relative;\r\n  max-width: calc(1010 * 6);\r\n  transition: ease 1000ms;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst TextBanner = styled.li`\r\n  width: 1010px;\r\n  div {\r\n    margin: 40px 70px;\r\n    font-weight: ${({ theme }) => theme.fonts.weightExtra};\r\n    font-size: 110px;\r\n  }\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}