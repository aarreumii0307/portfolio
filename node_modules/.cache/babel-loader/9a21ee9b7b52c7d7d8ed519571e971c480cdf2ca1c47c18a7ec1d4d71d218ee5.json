{"ast":null,"code":"import { isIphoneX } from \"react-native-iphone-x-helper\";\nimport { Platform, StatusBar, Dimensions } from \"react-native\";\nexport function RFPercentage(percent) {\n  const {\n    height,\n    width\n  } = Dimensions.get(\"window\");\n  const standardLength = width > height ? width : height;\n  const offset = width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight; // iPhone X style SafeAreaView size in portrait\n\n  const deviceHeight = isIphoneX() || Platform.OS === \"android\" ? standardLength - offset : standardLength;\n  const heightPercent = percent * deviceHeight / 100;\n  return Math.round(heightPercent);\n}\n\n// guideline height for standard 5\" device screen is 680\nexport function RFValue(fontSize) {\n  let standardScreenHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 680;\n  const {\n    height,\n    width\n  } = Dimensions.get(\"window\");\n  const standardLength = width > height ? width : height;\n  const offset = width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight; // iPhone X style SafeAreaView size in portrait\n\n  const deviceHeight = isIphoneX() || Platform.OS === \"android\" ? standardLength - offset : standardLength;\n  const heightPercent = fontSize * deviceHeight / standardScreenHeight;\n  return Math.round(heightPercent);\n}","map":{"version":3,"names":["isIphoneX","Platform","StatusBar","Dimensions","RFPercentage","percent","height","width","get","standardLength","offset","OS","currentHeight","deviceHeight","heightPercent","Math","round","RFValue","fontSize","standardScreenHeight","arguments","length","undefined"],"sources":["C:/Users/김아름/Desktop/index/portfolio/kimahreum/node_modules/react-native-responsive-fontsize/index.js"],"sourcesContent":["import { isIphoneX } from \"react-native-iphone-x-helper\";\nimport { Platform, StatusBar, Dimensions } from \"react-native\";\n\nexport function RFPercentage(percent) {\n  const { height, width } = Dimensions.get(\"window\");\n  const standardLength = width > height ? width : height;\n  const offset =\n    width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight; // iPhone X style SafeAreaView size in portrait\n\n  const deviceHeight =\n    isIphoneX() || Platform.OS === \"android\"\n      ? standardLength - offset\n      : standardLength;\n\n  const heightPercent = (percent * deviceHeight) / 100;\n  return Math.round(heightPercent);\n}\n\n// guideline height for standard 5\" device screen is 680\nexport function RFValue(fontSize, standardScreenHeight = 680) {\n  const { height, width } = Dimensions.get(\"window\");\n  const standardLength = width > height ? width : height;\n  const offset =\n    width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight; // iPhone X style SafeAreaView size in portrait\n\n  const deviceHeight =\n    isIphoneX() || Platform.OS === \"android\"\n      ? standardLength - offset\n      : standardLength;\n\n  const heightPercent = (fontSize * deviceHeight) / standardScreenHeight;\n  return Math.round(heightPercent);\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,8BAA8B;AACxD,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,cAAc;AAE9D,OAAO,SAASC,YAAYA,CAACC,OAAO,EAAE;EACpC,MAAM;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGJ,UAAU,CAACK,GAAG,CAAC,QAAQ,CAAC;EAClD,MAAMC,cAAc,GAAGF,KAAK,GAAGD,MAAM,GAAGC,KAAK,GAAGD,MAAM;EACtD,MAAMI,MAAM,GACVH,KAAK,GAAGD,MAAM,GAAG,CAAC,GAAGL,QAAQ,CAACU,EAAE,KAAK,KAAK,GAAG,EAAE,GAAGT,SAAS,CAACU,aAAa,CAAC,CAAC;;EAE7E,MAAMC,YAAY,GAChBb,SAAS,EAAE,IAAIC,QAAQ,CAACU,EAAE,KAAK,SAAS,GACpCF,cAAc,GAAGC,MAAM,GACvBD,cAAc;EAEpB,MAAMK,aAAa,GAAIT,OAAO,GAAGQ,YAAY,GAAI,GAAG;EACpD,OAAOE,IAAI,CAACC,KAAK,CAACF,aAAa,CAAC;AAClC;;AAEA;AACA,OAAO,SAASG,OAAOA,CAACC,QAAQ,EAA8B;EAAA,IAA5BC,oBAAoB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;EAC1D,MAAM;IAAEd,MAAM;IAAEC;EAAM,CAAC,GAAGJ,UAAU,CAACK,GAAG,CAAC,QAAQ,CAAC;EAClD,MAAMC,cAAc,GAAGF,KAAK,GAAGD,MAAM,GAAGC,KAAK,GAAGD,MAAM;EACtD,MAAMI,MAAM,GACVH,KAAK,GAAGD,MAAM,GAAG,CAAC,GAAGL,QAAQ,CAACU,EAAE,KAAK,KAAK,GAAG,EAAE,GAAGT,SAAS,CAACU,aAAa,CAAC,CAAC;;EAE7E,MAAMC,YAAY,GAChBb,SAAS,EAAE,IAAIC,QAAQ,CAACU,EAAE,KAAK,SAAS,GACpCF,cAAc,GAAGC,MAAM,GACvBD,cAAc;EAEpB,MAAMK,aAAa,GAAII,QAAQ,GAAGL,YAAY,GAAIM,oBAAoB;EACtE,OAAOJ,IAAI,CAACC,KAAK,CAACF,aAAa,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}