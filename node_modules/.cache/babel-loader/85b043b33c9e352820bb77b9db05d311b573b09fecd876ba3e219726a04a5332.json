{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uAE40\\uC544\\uB984\\\\Desktop\\\\index\\\\portfolio\\\\kimahreum\\\\src\\\\layouts\\\\main\\\\section\\\\SectionProject.jsx\";\nimport { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SectionProject() {\n  const text = [\"KEEP GOING KEEP GOING\"];\n  let slides = setSlides();\n  const 양끝에_추가될_데이터수 = 2;\n  function setSlides() {\n    let addedFront = [];\n    let addedLast = [];\n    var index = 0;\n    while (index < 양끝에_추가될_데이터수) {\n      addedLast.push(items[index % items.length]);\n      addedFront.unshift(items[items.length - 1 - index % items.length]);\n      index++;\n    }\n    return [...addedFront, ...items, ...addedLast];\n  }\n  function replaceSlide(index) {\n    setTimeout(() => {\n      setTransition(\"\");\n      setCurrentIndex(index);\n    }, transitionTime);\n  }\n  function handleSwipe(direction) {\n    let index = currentIndex + direction;\n    setCurrentIndex(index);\n    if (index < 양끝에_추가될_데이터수) {\n      index += itemSize;\n      replaceSlide(index);\n    } else if (index >= itemSize + 양끝에_추가될_데이터수) {\n      index -= -itemSize;\n      replaceSlide(index);\n    }\n    setTransition(transitionStyle);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Wrap, {\n      children: /*#__PURE__*/_jsxDEV(TextBannerWrap, {\n        style: {\n          transform: `translateX(${-100 / slides.length * (0.5 + currentIndex)}%)`\n        },\n        children: slides.map((text, slideIndex) => {\n          const itemIndex = getItemIndex(slideIndex);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `TextBanner ${currentIndex === slideIndex ? \"current-slide\" : \"\"}`,\n            style: {\n              width: newItemWidth || \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              style: {\n                background: items[itemIndex]\n              },\n              children: [itemIndex, \"(\", slideIndex, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, slideIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = SectionProject;\nexport default SectionProject;\nconst Container = styled.div`\n  width: 100%;\n`;\n_c2 = Container;\nconst Wrap = styled.div`\n  width: 100%;\n`;\n_c3 = Wrap;\nconst TextBannerWrap = styled.div`\n  overflow: hidden;\n  width: 100%;\n  div {\n    white-space: nowrap;\n    transition: ease 1000ms;\n  }\n`;\n_c4 = TextBannerWrap;\nconst Text = styled.div`\n  display: inline-block;\n  width: 100%;\n  font-weight: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.fonts.weightExtra;\n}};\n  font-size: 110px;\n`;\n_c5 = Text;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SectionProject\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Wrap\");\n$RefreshReg$(_c4, \"TextBannerWrap\");\n$RefreshReg$(_c5, \"Text\");","map":{"version":3,"names":["useState","useEffect","useRef","styled","jsxDEV","_jsxDEV","SectionProject","text","slides","setSlides","양끝에_추가될_데이터수","addedFront","addedLast","index","push","items","length","unshift","replaceSlide","setTimeout","setTransition","setCurrentIndex","transitionTime","handleSwipe","direction","currentIndex","itemSize","transitionStyle","Container","children","Wrap","TextBannerWrap","style","transform","map","slideIndex","itemIndex","getItemIndex","className","width","newItemWidth","Text","background","fileName","_jsxFileName","lineNumber","columnNumber","_c","div","_c2","_c3","_c4","_ref","theme","fonts","weightExtra","_c5","$RefreshReg$"],"sources":["C:/Users/김아름/Desktop/index/portfolio/kimahreum/src/layouts/main/section/SectionProject.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction SectionProject() {\r\n  const text = [\"KEEP GOING KEEP GOING\"];\r\n  let slides = setSlides();\r\n  const 양끝에_추가될_데이터수 = 2;\r\n\r\n  function setSlides() {\r\n    let addedFront = [];\r\n    let addedLast = [];\r\n    var index = 0;\r\n    while (index < 양끝에_추가될_데이터수) {\r\n      addedLast.push(items[index % items.length]);\r\n      addedFront.unshift(items[items.length - 1 - (index % items.length)]);\r\n      index++;\r\n    }\r\n    return [...addedFront, ...items, ...addedLast];\r\n  }\r\n\r\n  function replaceSlide(index) {\r\n    setTimeout(() => {\r\n      setTransition(\"\");\r\n      setCurrentIndex(index);\r\n    }, transitionTime);\r\n  }\r\n\r\n  function handleSwipe(direction) {\r\n    let index = currentIndex + direction;\r\n    setCurrentIndex(index);\r\n    if (index < 양끝에_추가될_데이터수) {\r\n      index += itemSize;\r\n      replaceSlide(index);\r\n    } else if (index >= itemSize + 양끝에_추가될_데이터수) {\r\n      index -= -itemSize;\r\n      replaceSlide(index);\r\n    }\r\n    setTransition(transitionStyle);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Wrap>\r\n        <TextBannerWrap\r\n          style={{\r\n            transform: `translateX(${\r\n              (-100 / slides.length) * (0.5 + currentIndex)\r\n            }%)`,\r\n          }}\r\n        >\r\n          {slides.map((text, slideIndex) => {\r\n            const itemIndex = getItemIndex(slideIndex);\r\n            return (\r\n              <div\r\n                key={slideIndex}\r\n                className={`TextBanner ${\r\n                  currentIndex === slideIndex ? \"current-slide\" : \"\"\r\n                }`}\r\n                style={{ width: newItemWidth || \"auto\" }}\r\n              >\r\n                <Text style={{ background: items[itemIndex] }}>\r\n                  {itemIndex}({slideIndex})\r\n                </Text>\r\n              </div>\r\n            );\r\n          })}\r\n        </TextBannerWrap>\r\n      </Wrap>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SectionProject;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst Wrap = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst TextBannerWrap = styled.div`\r\n  overflow: hidden;\r\n  width: 100%;\r\n  div {\r\n    white-space: nowrap;\r\n    transition: ease 1000ms;\r\n  }\r\n`;\r\n\r\nconst Text = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font-weight: ${({ theme }) => theme.fonts.weightExtra};\r\n  font-size: 110px;\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}